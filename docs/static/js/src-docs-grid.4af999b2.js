(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./src/docs/grid.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),l=a.n(t),s=a("./node_modules/@mdx-js/tag/dist/index.js"),o=a("./src/index.js");function m(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}n.default=function(e){var n=e.components;m(e,["components"]);return l.a.createElement(s.MDXTag,{name:"wrapper",components:n},l.a.createElement(s.MDXTag,{name:"h1",components:n,props:{id:"usage"}},"Usage"),l.a.createElement(s.MDXTag,{name:"p",components:n},"Resizes your window to see the responsive magic happening \ud83d\ude0e"),l.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"responsive"}},"Responsive"),l.a.createElement(o.b,null,l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:2,sm:6,md:2,lg:6},"xs=",2," sm=",6," md=",2," lg=",6),l.a.createElement(o.a,{debug:!0,xs:2,sm:2,md:6,lg:6},"xs=",2," sm=",2," md=",6," lg=",6)),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:2,sm:2,md:6,lg:6},"xs=",2," sm=",2," md=",6," lg=",6),l.a.createElement(o.a,{debug:!0,xs:2,sm:6,md:2,lg:6},"xs=",2," sm=",6," md=",2," lg=",6)),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:2,sm:6,md:2,lg:6},"xs=",2," sm=",6," md=",2," lg=",6),l.a.createElement(o.a,{debug:!0,xs:2,sm:2,md:6,lg:6},"xs=",2," sm=",2," md=",6," lg=",6))),l.a.createElement(s.MDXTag,{name:"blockquote",components:n},l.a.createElement(s.MDXTag,{name:"p",components:n,parentName:"blockquote"},"\ud83d\udca1",l.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"Tip!")," if no dimension is defined, the column size will be ",l.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"auto"),".\n(i.e. md={6}. This means that ",l.a.createElement(s.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"xs")," and ",l.a.createElement(s.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"sm")," is auto,\nand from ",l.a.createElement(s.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"md"),", the size will be 6 columns)")),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<Container>\n  <Row>\n    <Col debug xs={2} sm={6} md={2} lg={6}>\n      xs={2} sm={6} md={2} lg={6}\n    </Col>\n    <Col debug xs={2} sm={2} md={6} lg={6}>\n      xs={2} sm={2} md={6} lg={6}\n    </Col>\n  </Row>\n  <Row>\n    <Col debug xs={1} sm={4} md={3} lg={4}>\n      xs={1} sm={4} md={3} lg={4}\n    </Col>\n    <Col debug xs={3} sm={4} md={5} lg={8}>\n      xs={3} sm={4} md={5} lg={8}\n    </Col>\n  </Row>\n</Container>\n")),l.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"offset"}},"Offset"),l.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"using-number"}},"Using number"),l.a.createElement(s.MDXTag,{name:"p",components:n},"if you enter a number, the number of columns of the screen xs will be used as base. in this example, 2 columns of 4 will be used for both offset and column size, ie 50%."),l.a.createElement(o.b,null,l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:2,offset:2},"50% offset"))),l.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"using-object"}},"Using object"),l.a.createElement(s.MDXTag,{name:"p",components:n},"in this case, the ",l.a.createElement(s.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"offset")," prop must receive an object with the screens and their respective values."),l.a.createElement(o.b,null,l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:1,sm:1,lg:1,offset:{xs:3,sm:7,lg:11}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:1,sm:1,lg:2,offset:{xs:3,sm:7,lg:10}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:1,sm:2,lg:3,offset:{xs:3,sm:6,lg:9}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:2,sm:3,lg:4,offset:{xs:2,sm:5,lg:8}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:2,sm:4,lg:5,offset:{xs:2,sm:4,lg:7}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:2,sm:5,lg:6,offset:{xs:2,sm:3,lg:6}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:3,sm:5,lg:7,offset:{xs:1,sm:3,lg:5}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:3,sm:5,lg:8,offset:{xs:1,sm:3,lg:4}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:3,sm:6,lg:9,offset:{xs:1,sm:2,lg:3}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:4,sm:7,lg:10,offset:{xs:0,sm:1,lg:2}},"\xa0")),l.a.createElement(o.d,null,l.a.createElement(o.a,{debug:!0,xs:4,sm:8,lg:11,offset:{xs:0,sm:0,lg:1}},"\xa0"))),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<Container>\n  <Row><Col debug xs={1} sm={1} lg={1} offset={{ xs:3, sm:7, lg:11}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={1} sm={1} lg={2} offset={{ xs:3, sm:7, lg:10}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={1} sm={2} lg={3} offset={{ xs:3, sm:6, lg:9}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={2} sm={3} lg={4} offset={{ xs:2, sm:5, lg:8}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={2} sm={4} lg={5} offset={{ xs:2, sm:4, lg:7}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={2} sm={5} lg={6} offset={{ xs:2, sm:3, lg:6}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={3} sm={5} lg={7} offset={{ xs:1, sm:3, lg:5}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={3} sm={5} lg={8} offset={{ xs:1, sm:3, lg:4}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={3} sm={6} lg={9} offset={{ xs:1, sm:2, lg:3}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={4} sm={7} lg={10} offset={{ xs:0, sm:1, lg:2}}>&nbsp;</Col></Row>\n  <Row><Col debug xs={4} sm={8} lg={11} offset={{ xs:0, sm:0, lg:1}}>&nbsp;</Col></Row>\n</Container>\n")),l.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"row-reverse"}},"Row reverse"),l.a.createElement(s.MDXTag,{name:"p",components:n},l.a.createElement(s.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"reverse")," receives an array with the screens that will have the flow reversed. if it is passed as boolean, the stream will be inverted at all breakpoints"),l.a.createElement(o.b,null,l.a.createElement(o.d,{reverse:["md"]},l.a.createElement(o.a,{debug:!0,xs:2},"Column A"),l.a.createElement(o.a,{debug:!0,xs:2},"Column B")),l.a.createElement(o.d,{reverse:!0},l.a.createElement(o.a,{debug:!0,xs:2},"Column A"),l.a.createElement(o.a,{debug:!0,xs:2},"Column B"))),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<Container>\n  <Row reverse={['md']}>\n    <Col debug xs={2}>Column A</Col>\n    <Col debug xs={2}>Column B</Col>\n  </Row>\n  <Row reverse>\n    <Col debug xs={2}>Column A</Col>\n    <Col debug xs={2}>Column B</Col>\n  </Row>\n</Container>\n")),l.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"column-reverse"}},"Column reverse"),l.a.createElement(s.MDXTag,{name:"p",components:n},l.a.createElement(s.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"reverse")," receives an array with the screens that will have the flow reversed. if it is passed as boolean, the stream will be inverted at all breakpoints"),l.a.createElement(o.b,null,l.a.createElement(o.d,null,l.a.createElement(o.a,{noGutter:!0,reverse:["md","lg"]},l.a.createElement("div",{style:{backgroundColor:"#5901ad40",outline:"1px solid #fff"}},"Column A"),l.a.createElement("div",{style:{backgroundColor:"#5901ad40",outline:"1px solid #fff"}},"Column B"),l.a.createElement("div",{style:{backgroundColor:"#5901ad40",outline:"1px solid #fff"}},"Column C")),l.a.createElement(o.a,{noGutter:!0,reverse:!0},l.a.createElement("div",{style:{backgroundColor:"#5901ad40",outline:"1px solid #fff"}},"Column A"),l.a.createElement("div",{style:{backgroundColor:"#5901ad40",outline:"1px solid #fff"}},"Column B"),l.a.createElement("div",{style:{backgroundColor:"#5901ad40",outline:"1px solid #fff"}},"Column C")))),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<Container>\n  <Row>\n    <Col noGutter reverse={['md', 'lg']}>\n      <div style={{backgroundColor: '#5901ad40', outline: '1px solid #fff'}}>Column A</div>\n      <div style={{backgroundColor: '#5901ad40', outline: '1px solid #fff'}}>Column B</div>\n      <div style={{backgroundColor: '#5901ad40', outline: '1px solid #fff'}}>Column C</div>\n    </Col>\n        <Col noGutter reverse>\n      <div style={{backgroundColor: '#5901ad40', outline: '1px solid #fff'}}>Column A</div>\n      <div style={{backgroundColor: '#5901ad40', outline: '1px solid #fff'}}>Column B</div>\n      <div style={{backgroundColor: '#5901ad40', outline: '1px solid #fff'}}>Column C</div>\n    </Col>\n  </Row>\n</Container>\n")),l.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"visible"}},"Visible"),l.a.createElement(s.MDXTag,{name:"p",components:n},"Show a element only in a specific screen size"),l.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"example-using-only-text"}},"Example using only text"),l.a.createElement("div",null,l.a.createElement(o.f,{xs:!0},"This text is visible only on: XS"),l.a.createElement(o.f,{sm:!0},"This text is visible only on: SM"),l.a.createElement(o.f,{md:!0},"This text is visible only on: MD"),l.a.createElement(o.f,{lg:!0},"This text is visible only on: LG"),l.a.createElement(o.f,{xl:!0},"This text is visible only on: XL")),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<div>\n  <Visible xs>This text is visible only on: XS</Visible>\n  <Visible sm>This text is visible only on: SM</Visible>\n  <Visible md>This text is visible only on: MD</Visible>\n  <Visible lg>This text is visible only on: LG</Visible>\n  <Visible xl>This text is visible only on: XL</Visible>\n</div>\n")),l.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"example-using-an-row-with-col"}},"Example using an Row with Col"),l.a.createElement(o.b,null,l.a.createElement(o.d,null,l.a.createElement(o.f,{xs:!0,sm:!0},l.a.createElement(o.a,{debug:!0},"Visible only on XS and SM screens")),l.a.createElement(o.f,{md:!0,lg:!0,xl:!0},l.a.createElement(o.a,{debug:!0},"Visible only on MD, LG and XL screens")))),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<Container>\n  <Row>\n    <Visible xs sm>\n      <Col debug>Visible only on XS and SM screens</Col>\n    </Visible>\n    <Visible md lg xl>\n      <Col debug>Visible only on MD, LG and XL screens</Col>\n    </Visible>\n  </Row>\n</Container>\n")),l.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"hidden"}},"Hidden"),l.a.createElement(s.MDXTag,{name:"p",components:n},"Hides a element only in a specific screen size"),l.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"example-using-only-text-1"}},"Example using only text"),l.a.createElement("div",null,l.a.createElement(o.c,{xs:!0},l.a.createElement("div",null,"This text is hidden only on: XS")),l.a.createElement(o.c,{sm:!0},l.a.createElement("div",null,"This text is hidden only on: SM")),l.a.createElement(o.c,{md:!0},l.a.createElement("div",null,"This text is hidden only on: MD")),l.a.createElement(o.c,{lg:!0},l.a.createElement("div",null,"This text is hidden only on: LG")),l.a.createElement(o.c,{xl:!0},l.a.createElement("div",null,"This text is hidden only on: XL"))),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<div>\n  <Hidden xs><div>This text is hidden only on: XS</div></Hidden>\n  <Hidden sm><div>This text is hidden only on: SM</div></Hidden>\n  <Hidden md><div>This text is hidden only on: MD</div></Hidden>\n  <Hidden lg><div>This text is hidden only on: LG</div></Hidden>\n  <Hidden xl><div>This text is hidden only on: XL</div></Hidden>\n</div>\n")),l.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"example-using-an-row-with-col-1"}},"Example using an Row with Col"),l.a.createElement(o.b,null,l.a.createElement(o.d,null,l.a.createElement(o.c,{xs:!0,sm:!0},l.a.createElement(o.a,{debug:!0},"Hidden only on XS and SM screens")),l.a.createElement(o.c,{md:!0,lg:!0,xl:!0},l.a.createElement(o.a,{debug:!0},"Hidden only on MD, LG and XL screens")))),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"<Container>\n  <Row>\n    <Hidden xs sm>\n      <Col debug>Hidden only on XS and SM screens</Col>\n    </Hidden>\n    <Hidden md lg xl>\n      <Col debug>Hidden only on MD, LG and XL screens</Col>\n    </Hidden>\n  </Row>\n</Container>\n")),l.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"screenbadge"}},"ScreenBadge"),l.a.createElement(s.MDXTag,{name:"p",components:n},"Displays a badge in the lower right corner with the current screen for debug"),l.a.createElement(o.e,null),l.a.createElement(s.MDXTag,{name:"pre",components:n},l.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"  <ScreenBadge />\n")))}}}]);